#!/usr/bin/python
import os, glob, sys

version = sys.argv[1]
package = 'python%s-twisted' % version
basedir = os.path.join('debian', package)

def makedirs(dir):
    if not os.path.isdir(dir):
        os.makedirs(dir)

def all(dir):
    return glob.glob(os.path.join(dir, '*'))

def system(command):
    ret = os.system(command)
    if ret != 0:
        raise OSError(ret)

def install(files, target, mode='644'):
    system('install -m %s %s %s' % (mode, ' '.join(files), target))

def debdir(dir):
    return os.path.join(basedir, dir)

docdir = debdir('usr/share/doc/%s' % package)
mandir = debdir('usr/share/man/man1')
menudir = debdir('usr/lib/menu/')
bindir = debdir('usr/bin/')

for dir in (docdir, mandir, menudir):
    makedirs(dir)

install(['TODO', 'README', 'CREDITS'], docdir)
install(['ChangeLog'], os.path.join(docdir, 'changelog'))
install(['debian/changelog'], os.path.join(docdir, 'changelog.Debian'))

for file in os.listdir(docdir):
    system('gzip -9 %s' % os.path.join(docdir, file))

install(['debian/copyright'], docdir)

for file in all(bindir):
    lines = open(file).readlines()
    lines[0] = '#!/usr/bin/python%s\n' % version
    open(file, 'w').writelines(lines)
    system('mv %s %s%s' % (file, file, version))

for file in all('doc/man'):
    target = os.path.splitext(os.path.basename(file))[0]+version+'.1'
    install([file], os.path.join(mandir, target))
    system('gzip -9 %s' % os.path.join(mandir, target))

install(['debian/%s.menu' % package],
        os.path.join(menudir, package))

def strip(_, dirname, fnames):
    for fname in fnames:
        if os.path.splitext(fname)[1] == '.so':
            fname = os.path.join(dirname, fname)
            system('strip --remove-section=.comment '
                   '--remove-section=.note --strip-unneeded ' + fname)

os.path.walk(basedir, strip, None)

makedirs(debdir('DEBIAN'))

for maint in 'prerm postrm postinst'.split():
    install(['debian/%s.%s' % (package, maint)],
            debdir('DEBIAN/%s' % maint), 755)
