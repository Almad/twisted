- More Tests!

- Low level protocol:
 - sendfile (initial sketch in stream.py, but needs work in twisted, too)
 - Gzip Transfer-Encoding.
 - Add parsers/generators for the rest of the headers:
  - Cache-Control, Pragma, Trailer, Upgrade, Via, Warning
  - Authorization, WWW-Authenticate

 - Authentication (basic and digest)
 - Cookies

- Application server:
 - Create default log observers for the log.msg's that we send.
 - Resource API for prerender checking (I've forgotten what I mean by this?)
 - Other useful filters: content-encoding, caching, others?

- Resource:
 - Default form POST processing.
 - Handle HTTP methods properly on all standard resources, and make it easy 
    to do right on user resources

- Compatibility Layer
 - Handle setETag and setLastModified RFC-compliantly, even though they are
   the wrong interface (need to have both before being able to respond properly)
 - 