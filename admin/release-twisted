#!/usr/bin/env python

# Twisted, the Framework of Your Internet
# Copyright (C) 2001 Matthew W. Lefkowitz
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of version 2.1 of the GNU Lesser General Public
# License as published by the Free Software Foundation.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

### Twisted Preamble
# This makes sure that users don't have to set up their environment
# specially in order to run these programs from bin/.
import sys,os,string

if string.find(os.path.abspath(sys.argv[0]),'Twisted') != -1:
    sys.path.append(os.path.dirname(
      os.path.dirname(os.path.abspath(sys.argv[0]))))
sys.path.append('.')
### end of preamble

#
# The Twisted release script. This is terribly unix-centric.
#

from twisted.python import usage

import string, os, shutil

class Options(usage.Options):
    optParameters = [['source', 's', 'Twisted', "The directory of the Twisted source to build a release from."],
                     ['version', 'v', None, "The version of this release."],
                     ['release', 'r', os.path.expanduser('~/Releases'), "The directory where your Twisted release archive is."]]
    
    optFlags = [['docs', 'd', "Make a Documentation tarball (must have HappyDoc)."],
                ['onlydocs', 'D', "*ONLY* make the docs (that is, don't generate the regular Twisted distribution). Twisted-$VERSION must already exist."],
                ['dontrelease', 'R', "Useful if you want to customize a release before putting it in your Release directory."]]


def main():
    try:
        opts = Options()
        opts.parseOptions()
    except usage.UsageError, ue:
        print "%s: %s" % (sys.argv[0], ue)
        sys.exit(2)

    if not opts.opts['version']:
        print "Please specify a version."
        sys.exit(2)

    if opts.opts['onlydocs']:
        makeDocs(opts)
        return

    makeDist(opts)
    if not opts.opts['dontrelease']:
        release(opts)
               
    if opts.opts['docs']:
        makeDocs(opts)


def makeDist(opts):
    ver = opts.opts['version']
    destDir = "Twisted-%s" % ver
    source = opts.opts['source']
    
    if os.path.exists(destDir):
        print destDir,"exists already!"
        sys.exit(2)

    print "Copying %s to %s..." % (source, destDir)
    shutil.copytree(source, destDir)

    print "Stripping *~, *.pyc, *.rpl, *.tap..."
    for x in ['*~', '*.pyc', '*.rpl', '*.tap', '.cvsignore', '.#*']:
        os.system('find %s -name "%s" | xargs rm -f' % (destDir, x))

    print "Stripping 'CVS' directories..."
    os.system('find %s -name CVS | xargs rm -rf' % destDir)

    print "Making dist tarball..."
    os.system('tar czf Twisted-%s.tar.gz %s' % (ver, destDir))

    print "Making the dist bz2ball"
    os.system('tar cjf Twisted-%s.tar.bz2 %s' % (ver, destDir))

    print "Making dist zipfile..."
    os.system('zip -r Twisted-%s.zip %s' % (ver, destDir))



def release(opts):
    rel = opts.opts['release']
    ver = opts.opts['version']
    print "Putting it in %s..." % rel
    if not os.path.exists(rel):
        print "Creating", rel
        os.mkdir(rel)

    if not os.path.exists("%s/old" % rel):
        print "creating %s/old" % rel
        os.mkdir("%s/old" % rel)

    os.system('mv %s/*.tar.gz %s/*.zip %s/old' % ((rel,)*3))
    shutil.copy('Twisted-%s.tar.gz' % ver, rel)
    shutil.copy('Twisted-%s.zip' % ver, rel)

def makeDocs(opts):
    print "Making Docs!"
    ver = opts.opts['version']
    rel = opts.opts['release']
    if not os.path.exists('Twisted-%s' % ver):
        print "Twisted-%s doesn't exist!" % ver
        sys.exit(2)
    os.system('happydoc --author="Glyph Lefkowitz <glyph@twistedmatrix.com>" --no_comments -t "Twisted Documentation" Twisted-%s' % ver)
    os.system('mv doc TwistedDocs-%s' % ver)
    os.system('tar czf TwistedDocs-%s.tar.gz TwistedDocs-%s' % ((ver,)*2))
    os.system('zip -r TwistedDocs-%s.zip TwistedDocs-%s' % ((ver,)*2))
    shutil.copy('TwistedDocs-%s.tar.gz' % ver, rel)
    shutil.copy('TwistedDocs-%s.zip' % ver, rel)

if __name__=='__main__':
    main()
