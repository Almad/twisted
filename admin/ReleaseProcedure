TEST, TEST.
 
 * run the unit tests.
./admin/runtests
 * run the accepttests. I use:
WEBBROWSER='galeon -n' IRCCLIENT=epic4 admin/accepttests -b
 * make sure distributed web servers are working; test on zaibach.
     * run a --user server on port 3080 
./bin/mktap web --user -p 3080; ./bin/twistd -f web.tap
     * check http://twistedmatrix.com:3080/jh.twistd/python/moin.cgi/, carmstro.twistd, z3p.twistd; if distributed web *wasn't* supposed to break this 
       release, scream at twisted.web hackers :-)
     * kill the server:
kill `cat twistd.pid`
     * start a new --personal server from the latest codebase:
       (make sure it's working -- we've actually had a release once where a 
        newer --user worked with older --personals but *not*
        new --personals, and I never tested new --personals!)
       * kill your regular personal server
       * Run:
./bin/mktap web --personal;./bin/twistd -f web.tap
       * check http://twistedmatrix.com/<you>.twistd/
       * kill it:
kill `cat twistd.pid`
       * Restart your regular personal server
     * Run the test.tas from Twisted/admin/ with the latest `twistd':
./bin/twistd -s admin/test.tas
       and check http://localhost:3080/ - this tests upgrading code.
       * kill it:
kill `cat twistd.pid`
     * Test -y: 
./bin/twistd -y admin/echo.py
       * kill it:
kill `cat twistd.pid`

 * Also make sure that the words .tap remained compatible; start the words server's .tap on some out-of-the-way port
       (same as above, I've gotta automate this)

 * OK, so everything's working, time to update release documents
 * ChangeLog: Browse through twisted-commits; if you see any updates that are
   significant but weren't mentioned in ChangeLog, retroactively add them
 * ChangeLog: Add an entry: * .: Releasing Twisted <version>
 * README: add a new Quote of the Release

 * --- All the way from here to the SF hell is supposed to be automated ---
 * The other things here are done by release-twisted's upver functionality:
   * README: update all mentions of last version 
     number (use your editor's search function, there are several of them)
   * doc/howto/installing-twisted.html
   * twisted/copyright.py: Update the version number.
   * cvs commit README doc/howto/installing-twisted.html ChangeLog twisted/copyright.py


 * After ensuring we're really ready to dist:
 * When going from one RC to the next (or to final release):
   * cvs co -r release-X_X_XrcN
   * cvs up -A <files-that-you-want-to-merge>
   * cvs tag -c release-X_X_XrcN+1

 * When doing an `rc1':
   * `cvs tag release-X_X_Xrc1'.

 * switch to a new tmp directory and `cvs export release-X_X_X'.

 * Alright, we're ready to pack it up!
 * from one directory above "Twisted" CVS module, run './Twisted/admin/release-twisted -v <version>'
   * note that <version> must match the version number in 
     twisted/copyright.py; I made the mistake of forgetting to update 
     copyright once and this will prevent that :-)
   * There are a number of options available for 'release-twisted', use them 
     if desired

 * run 'md5sums ~/Releases/Twisted*', and 'gpg --clearsign' the output. update 
   /products/download/twisted-<ver>-md5sums.txt on the website.

 
 * run "apt-get update;apt-get upgrade"

 * restart the main Twisted server
cd /var/www
kill `cat twistd.pid`
mv web-shutdown.tap web-`date +%Y-%M-%D`.tap
./start-twistd.sh web-`date +%Y-%M-%D`.tap

 * Restart snibril's server
su jh; ~jh/bin/stop; ~jh/bin/start; exit

 * Restart the pb server:
su pb; cd ~/Working; kill `cat twistd.pid`; /twisted/Twisted/bin/twistd -f manhole-shutdown.tap; mv manhole-shutdown.tap oldtaps/manhole-shutdown-`date -I`.tap; exit

 * If everything's cool, edit WebSite/twistedmatrix.com/news.html, index, and products/download.html
 * go to 
cd /var/www/WebSite
./generate.sh

 * Alright, now for the hell that is sourceforge release-procedure:
   * lftp upload.sf.net
   * cd incoming; lcd /twisted/Releases; put *.zip *.gz *.bzip2
   * go to http://sourceforge.net, log in, go to twisted project page, admin, edit/release files.
   * for each package, click "Add Release", type in the version number for "Release Name", "Create This Release", 
     there should be a checklist of all the files in incoming, click the three
     relevent files for each package (ie, if you're in package TwistedDocs, click TwistedDocs-<version>.{zip,tar.gz,tar.bz2}),
     and then "Add Files and/or Refresh View".
   * OK, so the files for that package are added, now you have to "Edit Files in this release" (ugh, what a pain)
   * You can only do one file at a time, you have to specify the architecture (platform idependant for each one), and the
     file type (.zip, bz2, gz), and click on "Update/Refresh" for each file.
   * Now, repeat for the other two packages. Hooray, you're done. Wasn't that easy? :\

 * OK! All released up. Now, for the announcements:
   * Freshmeat
   * comp.lang.python
   * comp.lang.python.announce
   * parnassus.
 
 * notify packagers:
   * Moshe Zadka <moshez@twistedmatrix.com>, Debian
   * Johann Visagie <johann@egenetics.com>, FreeBSD
   * Windows installer people (Bruce <bruce@twistedmatrix.com>, glyph)
   * Gentoo people: murphy@gentoo.org, jnelson@gentoo.org (???)
