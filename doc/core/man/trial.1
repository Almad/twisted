.TH TRIAL "1" "Oct 2007" "" ""
.SH NAME
trial \- run unit tests
.SH SYNOPSIS
.B trial [options] [[file|package|module|TestCase|testmethod]...]
.PP
.B trial --help
.SH DESCRIPTION
.PP
trial loads and executes a suite of unit tests, obtained from modules,
packages and files listed on the command line.
.PP
trial will take either filenames or fully qualified Python names as
arguments.  Thus 'trial myproject/foo.py', 'trial myproject.foo' and
 'trial myproject.foo.SomeTestCase.test_method' are all valid ways to
invoke trial.
.TP
\fB-b\fR, \fB--debug\fR
Run the tests in the Python debugger. Also does post-mortem
debugging on exceptions. Will load '.pdbrc' from current directory if
it exists.
.TP
\fB-B\fR, \fB--debug-stacktraces\fR
Report Deferred creation and callback stack traces
.TP
\fB--coverage\fR
Generate coverage information in _trial_temp/coverage/. Requires Python 2.3
or higher.
.TP
\fB--disablegc\fR
Disable the garbage collector.  I don't know why this is in trial.
.TP
\fB-x\fR, \fB--extra\fR
Add an extra argument. (This is a hack necessary for interfacing with emacs's
`gud'.)
.TP
\fB-e\fR, \fB--rterrors\fR
Print tracebacks to standard output as soon as they occur
.TP
\fB--force-gc\fR
Run gc.collect() before and after each test case. This can be used to
isolate errors that occur when objects get collected.  This option would be
the default, except it makes tests run about ten times slower.
.TP
\fB-h\fR, \fB--help\fR
Print a usage message to standard output, then exit.
.TP
\fB--help-reporters\fR
Print a list of valid reporters to standard output, then exit.
.TP
\fB--help-reactors\fR
List the names of possibly available reactors.
.TP
\fB-l\fR, \fB--logfile\fR <logfile>
Direct the log to a different file. The default file is 'test.log'.
<logfile> is relative to _trial_temp.
.TP
\fB-n\fR, \fB--dry-run\fR
Go through all the tests and make them pass without running.
.TP
\fB-N\fR, \fB--no-recurse\fR
By default, trial recurses through packages to find every module inside
every subpackage.  Unless, that is, you specify this option.
.TP
\fB--nopm\fR
Don't automatically jump into debugger for post-mortem analysis of
exceptions.  Only usable in conjunction with --debug.
.TP
\fB--profile\fR
Run tests under the Python profiler.
.TP
\fB\-r\fR, \fB\--reactor\fR \fI<reactor>\fR
Choose which reactor to use.  See --help-reactors for a list.
.TP
\fB--recursionlimit\fR
Set Python's recursion limit. See sys.setrecursionlimit()
.TP
\fB--reporter\fR
Select the reporter to use for Trial's output.  Use the --help-reporters
option to see a list of valid reporters.
.TP
\fB--spew\fR
Print an insanely verbose log of everything that happens. Useful when
debugging freezes or locks in complex code.
.TP
\fB--tbformat\fR <format>
Format to display tracebacks with. Acceptable values are 'default', 'brief'
and 'verbose'. 'brief' produces tracebacks that play nicely with Emacs' GUD.
.TP
\fB--temp-directory <directory>\fR
WARNING: Do not use this options unless you know what you are doing. 
By default, trial creates a directory called _trial_temp under the current
working directory.  When trial runs, it first \fIdeletes\fR this directory,
then creates it, then changes into the directory to run the tests. The log
file and any coverage files are stored here. Use this option if you wish to
have trial run in a directory other than _trial_temp. Be warned, trial
will \fIdelete\fR the directory before re-creating it.
.TP
\fB--testmodule <filename>\fR
Ask trial to look into <filename> and run any tests specified using the
Emacs-style buffer variable 'test-case-name'.
.TP
\fB--unclean-warnings\fR
As of Twisted 8.0, trial will report an error if the reactor is left unclean
at the end of the test. This option is provided to assist in migrating from
Twisted 2.5 to Twisted 8.0 and later. Enabling this option will turn the errors
into warnings.
.TP
\fB-u\fR, \fB--until-failure\fR
Keep looping the tests until one of them raises an error or a failure.
This is particularly useful for reproducing intermittent failures.
.TP
\fB--version\fR
Prints the Twisted version number and exit.
.TP
\fB--without-module <modulenames>\fR
Simulate the lack of the specified comma-separated list of modules. This makes
it look like the modules are not present in the system, causing tests to check
the behavior for that configuration.
.TP
\fB-z\fR, \fB--random [<seed>]\fR
Run the tests in random order using the specified seed.
.PP
.SH AUTHOR
Written by Jonathan M. Lange
.SH "REPORTING BUGS"
To report a bug, visit \fIhttp://twistedmatrix.com/bugs/\fR
.SH COPYRIGHT
Copyright \(co 2003-2008 Twisted Matrix Laboratories
.br
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
